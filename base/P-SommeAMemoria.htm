<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Somme entro il 20</title>
    <style>
        body {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 100vh;
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
            text-align: center;
        }
        h1 {
            font-size: 2.5em;
            margin-bottom: 20px;
        }
        #operation {
            font-size: 3em;
            margin: 20px;
        }
        #startButton, #resultsButton, #restartButton {
            padding: 10px 20px;
            font-size: 1.5em;
            cursor: pointer;
        }
        #results {
            margin-top: 20px;
            display: none;
        }
        #progressBar {
            width: 100%;
            height: 30px;
            background-color: #ddd;
            margin: 20px 0;
        }
        #progress {
            height: 100%;
            width: 100%;
            background-color: #4caf50;
        }
        .square {
            display: inline-block;
            width: 30px;
            height: 30px;
            background-color: blue;
            margin: 5px;
            transition: background-color 0.3s;
        }
        #config {
            position: absolute;
            top: 20px;
            right: 20px;
            text-align: left;
        }
        #slider {
            width: 200px;
        }
        /* Stile per la tabella dei risultati */
        #resultsTable {
            margin-top: 20px;
            border-collapse: collapse;
            width: 100%;
        }
        #resultsTable th, #resultsTable td {
            padding: 15px; /* Aumentato il padding */
            font-size: 1.2em; /* Aumentata la dimensione del font */
            border: 1px solid #ddd;
            text-align: left;
        }
        #resultsTable th {
            background-color: #4caf50; /* Colore di sfondo per l'intestazione */
            color: white; /* Colore del testo per l'intestazione */
        }
    </style>
</head>
<body>

    <h1>Somme Entro il 20</h1>
    <div id="config">
        <label for="timeSlider">Tempo (5-30 secondi):</label>
        <input type="range" id="timeSlider" min="5" max="30" value="10">
        <span id="timeValue">10</span> secondi<br>
        
      <div id="sound-control">
    <label>
        <input type="checkbox" id="soundToggle" checked>
        Attiva suono campanella
    </label>
</div>

     
        <label><input type="checkbox" id="amiciCheck" checked> Amici del 10</label><br>
        <label><input type="checkbox" id="entroDieciCheck" checked> A memoria entro il 10</label><br>
        <label><input type="checkbox" id="ugualiCheck" checked> Numeri uguali</label><br>
        <label><input type="checkbox" id="finoVentiCheck" checked> A memoria fino a 20</label><br>
   
    </div>
    <button id="startButton">Inizia</button>
    <div id="operation"></div>
    <div id="progressBar"><div id="progress"></div></div>
    <div id="squaresContainer"></div>
    <button id="resultsButton" style="display: none;">Risultati</button>
    <button id="restartButton" style="display: none;">Ricomincia</button>
    <div id="results"></div>
   <button id="homeButton" style="position: fixed; bottom: 20px; right: 20px; padding: 10px; font-size: 1em;">Home</button>
<audio id="bellSound" src="https://cdn.glitch.global/0819f66c-524a-47c7-aa70-fc054f3eb712/campanella.mp3?v=1729869377632" preload="auto"></audio>

    <script>
             window.onload = function() {
            const amiciCheck = document.getElementById('amiciCheck');
            const entroDieciCheck = document.getElementById('entroDieciCheck');
            const ugualiCheck = document.getElementById('ugualiCheck');
            const finoVentiCheck = document.getElementById('finoVentiCheck');

            // Ripristina lo stato dei checkbox dal localStorage
            amiciCheck.checked = localStorage.getItem('amiciCheck') === 'true';
            entroDieciCheck.checked = localStorage.getItem('entroDieciCheck') === 'true';
            ugualiCheck.checked = localStorage.getItem('ugualiCheck') === 'true';
            finoVentiCheck.checked = localStorage.getItem('finoVentiCheck') === 'true';

            // Aggiorna il localStorage quando cambia lo stato del checkbox
            amiciCheck.addEventListener('change', function() {
                localStorage.setItem('amiciCheck', this.checked);
            });
            entroDieciCheck.addEventListener('change', function() {
                localStorage.setItem('entroDieciCheck', this.checked);
            });
            ugualiCheck.addEventListener('change', function() {
                localStorage.setItem('ugualiCheck', this.checked);
            });
            finoVentiCheck.addEventListener('change', function() {
                localStorage.setItem('finoVentiCheck', this.checked);
            });
        };
        let currentOperationIndex = 0;
        const operations = [];
        const results = [];
        const maxOperations = 10;
        let timerInterval;
        let operationTime = 10; 
        let timeInterval; 

        const savedTime = localStorage.getItem('operationTime');
        if (savedTime) {
            operationTime = savedTime;
            document.getElementById('timeSlider').value = operationTime;
            document.getElementById('timeValue').textContent = operationTime;
        }

        document.getElementById('timeSlider').addEventListener('input', function() {
            operationTime = this.value;
            document.getElementById('timeValue').textContent = operationTime;
            localStorage.setItem('operationTime', operationTime);
        });

        function shuffle(array) {
            for (let i = array.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [array[i], array[j]] = [array[j], array[i]];
            }
            return array;
        }

        const usedSums = [];

        function generateOperation() {
            let operation = '';
            let result = 0;

            const amiciDelDieci = document.getElementById('amiciCheck').checked;
            const entroDieci = document.getElementById('entroDieciCheck').checked;
            const numeriUguali = document.getElementById('ugualiCheck').checked;
            const finoVenti = document.getElementById('finoVentiCheck').checked;

            let sumsArray = [];

            // Array predefiniti per ogni casistica
            const amiciDelDieciSums = [
                [1, 9], [2, 8], [3, 7], [4, 6], [5, 5], [9, 1], [8, 2], [7, 3], [6, 4]
            ];

            const entroDieciSums = [
                [2, 3], [2, 4], [2, 5], [2, 6], [2, 7],
                [3, 2], [3, 4], [3, 5], [3, 6],
                [4, 2], [4, 3], [4, 5],
                [5, 2], [5, 3], [5, 4],
                [6, 2], [6, 3],
                [7, 2]
            ];

            const numeriUgualiSums = [
                [1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6], [7, 7], [8, 8], [9, 9], [10, 10]
            ];

            const finoVentiSums = [
                [2, 9], [3, 8], [4, 7], [5, 6],
                [2, 10], [3, 9], [4, 8], [5, 7],
                [6, 5], [7, 4], [8, 3], [9, 2],
                [10, 2], [10, 3], [10, 4], [10, 5],
                [10, 6], [10, 7], [10, 8], [10, 9],
                // Aggiungi altre coppie se necessario
            ];

            // Popoliamo l'array sumsArray in base alle checkbox selezionate
            if (amiciDelDieci) {
                sumsArray = sumsArray.concat(amiciDelDieciSums);
            }
            if (entroDieci) {
                sumsArray = sumsArray.concat(entroDieciSums);
            }
            if (numeriUguali) {
                sumsArray = sumsArray.concat(numeriUgualiSums);
            }
            if (finoVenti) {
                sumsArray = sumsArray.concat(finoVentiSums);
            }

            // Mescoliamo l'array per evitare ripetizioni sequenziali
            sumsArray = shuffle(sumsArray);

            // Estrarre una coppia dall'array mescolato
            if (sumsArray.length > 0) {
                let found = false;

                while (sumsArray.length > 0 && !found) {
                    const [num1, num2] = sumsArray.pop();
                    const sumKey = `${num1},${num2}`;

                    if (!usedSums.includes(sumKey)) {
                        operation = `${num1} + ${num2}`;
                        result = num1 + num2;

                        operations.push(operation);
                        results.push(result);
                        usedSums.push(sumKey); // Aggiungi la coppia all'array delle coppie già utilizzate
                        found = true;
                    }
                }
            }
        }
const bellSound = document.getElementById('bellSound');
const soundToggle = document.getElementById('soundToggle');
      
        function displayOperation() {
            if (currentOperationIndex < maxOperations) {
                generateOperation();
                document.getElementById('operation').textContent = operations[currentOperationIndex];
                document.getElementById('squaresContainer').children[currentOperationIndex].style.backgroundColor = 'red';
                currentOperationIndex++;
                resetProgressBar();
                startProgressBar();
              // Verifica se il suono è attivo
        if (soundToggle.checked) {
            bellSound.play();
        }
            } else {
                endGame();
            }
        }

        function resetProgressBar() {
            document.getElementById('progress').style.width = '100%';
        }

        function startProgressBar() {
            let progressBarWidth = 100;
            clearInterval(timerInterval);
            timerInterval = setInterval(() => {
                progressBarWidth -= (100 / (operationTime - 1));
                document.getElementById('progress').style.width = progressBarWidth + '%';
                if (progressBarWidth <= 0) {
                    clearInterval(timerInterval);
                }
            }, 1000);
        }

        function endGame() {
            clearInterval(timerInterval);
            clearInterval(timeInterval);
            document.getElementById('operation').textContent = '';
            document.getElementById('resultsButton').style.display = 'block';
            document.getElementById('startButton').style.display = 'none';
        }

        document.getElementById('startButton').addEventListener('click', function() {
            operations.length = 0;
            results.length = 0;
            currentOperationIndex = 0;
            document.getElementById('operation').textContent = '';
            document.getElementById('resultsButton').style.display = 'none';
            document.getElementById('squaresContainer').innerHTML = '';

            for (let i = 0; i < maxOperations; i++) {
                const square = document.createElement('div');
                square.className = 'square';
                document.getElementById('squaresContainer').appendChild(square);
            }

            displayOperation();
            document.getElementById('startButton').style.display = 'none';

            document.getElementById('timeSlider').disabled = true;
            document.getElementById('amiciCheck').disabled = true;
            document.getElementById('entroDieciCheck').disabled = true;
            document.getElementById('ugualiCheck').disabled = true;
            document.getElementById('finoVentiCheck').disabled = true;

            timeInterval = setInterval(displayOperation, (operationTime * 1000));
            startProgressBar();
        });

        document.getElementById('resultsButton').addEventListener('click', function() {
            let resultsText = '<h2>Risultati</h2><table id="resultsTable"><tr><th>Operazione</th><th>Risultato</th></tr>';
            for (let i = 0; i < maxOperations; i++) {
                resultsText += `<tr><td>${operations[i]}</td><td>${results[i]}</td></tr>`;
            }
            resultsText += '</table>';
            document.getElementById('results').innerHTML = resultsText;
            document.getElementById('results').style.display = 'block';
            document.getElementById('resultsButton').style.display = 'none';
            document.getElementById('restartButton').style.display = 'block';
        });

        document.getElementById('restartButton').addEventListener('click', function() {
            currentOperationIndex = 0;
            operations.length = 0;
            results.length = 0;
            document.getElementById('results').style.display = 'none';
            document.getElementById('operation').textContent = '';
            document.getElementById('restartButton').style.display = 'none';
            document.getElementById('resultsButton').style.display = 'none';
            document.getElementById('startButton').style.display = 'block';
            document.getElementById('timeSlider').disabled = false;
            document.getElementById('amiciCheck').disabled = false;
            document.getElementById('entroDieciCheck').disabled = false;
            document.getElementById('ugualiCheck').disabled = false;
            document.getElementById('finoVentiCheck').disabled = false;
        });
      document.getElementById('homeButton').addEventListener('click', function() {
            window.location.href = 'index.html'; // Cambia 'index.html' con il nome della tua pagina principale
        });
    </script>

</body>
</html>
