<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gioco dei Pallini</title>
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
        }

        .container {
            display: flex;
        }

        #left-panel {
            margin-right: 50px;
            position: relative;
        }

        #startButton, #restartButton {
            display: block;
            width: 100px;
            height: 40px;
            font-size: 1.2em;
            background-color: #4caf50;
            color: white;
            border: none;
            cursor: pointer;
            margin-bottom: 20px;
            transition: background-color 0.3s;
            position: absolute;
        }

        #startButton:hover, #restartButton:hover {
            background-color: #45a049;
        }

        #results {
            font-size: 1.1em;
            margin-top: 70px;
            position: absolute;
            top: 100px;
        }

        #grid {
            display: grid;
            grid-template-columns: repeat(4, 20px) 35px repeat(5, 20px); /* Spazio tra i gruppi di pallini */
            grid-template-rows: repeat(4, 20px) 35px repeat(5, 20px);    /* Spazio tra le due sezioni di righe */
            grid-gap: 10px;
            position: relative;
        }

        .dot {
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background-color: green;
        }

        .red {
            background-color: red;
        }

        #timeBar {
            width: 100%;
            height: 20px;
            background-color: lightgray;
            margin-top: 20px;
            position: relative;
        }

        #timeBarFill {
            height: 100%;
            background-color: green;
            width: 100%;
        }

        #slider-container {
            position: absolute;
            top: 0;
            right: 0;
            padding: 10px;
        }

        #slider-label {
            margin-right: 10px;
        }

    </style>
</head>
<body>

<div class="container">
    <div id="left-panel">
        <button id="startButton">Inizia</button>
        <button id="restartButton" style="display: none;">Ricomincia</button>
        <div id="results" style="display:none;"></div>
    </div>

    <div>
        <div id="grid"></div>
        <div id="timeBar">
            <div id="timeBarFill"></div>
        </div>
    </div>
</div>

<div id="slider-container">
    <label id="slider-label">Tempo pallini rossi: <span id="timeValue">10</span>s</label>
    <input type="range" id="timeSlider" min="5" max="30" value="10">
</div>

<script>
    const grid = document.getElementById('grid');
    const startButton = document.getElementById('startButton');
    const restartButton = document.getElementById('restartButton');
    const resultsDiv = document.getElementById('results');
    const timeBarFill = document.getElementById('timeBarFill');
    const timeSlider = document.getElementById('timeSlider');
    const timeValue = document.getElementById('timeValue');
    let redDots = []; // Per salvare la lista di pallini diventati rossi
    let gameInterval;
    let redCount = 0;
    let gameDuration = 10000; // Durata del rosso inizialmente
    let selectedDots = []; // Pallini selezionati durante il gioco

    // Crea la griglia di pallini verdi
    function createGrid() {
        for (let row = 0; row < 10; row++) {
            for (let col = 1; col <= 10; col++) {
                const dot = document.createElement('div');
                dot.classList.add('dot');
                dot.dataset.position = `${row}${col}`; // Salva la posizione del pallino
                grid.appendChild(dot);
            }
        }
    }

    function getRandomDot() {
        const allDots = document.querySelectorAll('.dot');
        let randomDot;

        do {
            randomDot = allDots[Math.floor(Math.random() * allDots.length)];
        } while (redDots.includes(randomDot)); // Evita che lo stesso pallino venga selezionato piÃ¹ volte

        return randomDot;
    }

    function updateBar(duration) {
        let width = 100;
        const interval = setInterval(() => {
            width -= (100 / (duration / 1000));
            timeBarFill.style.width = width + '%';
            if (width <= 0) {
                clearInterval(interval);
            }
        }, 1000);
    }

    function startGame() {
        redCount = 0;
        redDots = [];
        selectedDots = [];
        resultsDiv.innerHTML = ''; // Reset del pannello risultati
        resultsDiv.style.display = "none";

        gameInterval = setInterval(() => {
            if (redCount < 10) {
                const randomDot = getRandomDot();
                randomDot.classList.add('red');
                redDots.push(randomDot);

                const position = randomDot.dataset.position;
                selectedDots.push(position); // Salva la posizione del pallino

                updateBar(gameDuration);

                // Dopo il tempo selezionato il pallino torna verde
                setTimeout(() => {
                    randomDot.classList.remove('red');
                }, gameDuration);

                redCount++;
            } else {
                endGame();
            }
        }, gameDuration);
    }

    function endGame() {
        clearInterval(gameInterval);

        // Fai diventare rossi tutti i pallini che sono stati selezionati
        redDots.forEach(dot => dot.classList.add('red'));

        // Mostra i risultati
        resultsDiv.innerHTML = selectedDots.map((dot, index) => `Pallino ${index + 1}: ${dot}`).join('<br>');
        resultsDiv.style.display = 'block';

        // Mostra il tasto "ricomincia"
        restartButton.style.display = 'block';
    }

    function restartGame() {
        const allDots = document.querySelectorAll('.dot');
        allDots.forEach(dot => dot.classList.remove('red')); // Rimuove il colore rosso da tutti i pallini
        restartButton.style.display = 'none'; // Nasconde il pulsante ricomincia
        startButton.style.display = 'block'; // Mostra di nuovo il pulsante "Inizia"
    }

    // Event listeners
    startButton.addEventListener('click', () => {
        startButton.style.display = 'none'; // Nasconde il pulsante "Inizia"
        startGame();
    });

    restartButton.addEventListener('click', restartGame);

    // Aggiorna il tempo di permanenza in rosso del pallino
    timeSlider.addEventListener('input', () => {
        gameDuration = timeSlider.value * 1000;
        timeValue.textContent = timeSlider.value;
    });

    // Crea la griglia alla partenza
    createGrid();
</script>

</body>
</html>
